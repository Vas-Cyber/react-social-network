{"version":3,"sources":["components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","dialogs","message","DialogItem","active","to","id","name","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","validate","required","placeholder","profile","contentFont","Dialogs","state","dialogsPage","dialogsElements","map","dialog","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,aAAe,6B,oBCAjCD,EAAOC,QAAU,CAAC,aAAe,gC,oBCAjCD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,qFCOnKC,EANC,SAACC,GACb,OACA,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMI,W,QCOvBC,EARI,SAACL,GAChB,OACI,qBAAKC,UAAWC,IAAEC,QAAU,IAAMD,IAAEI,OAApC,SACI,cAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAjC,SAAsCR,EAAMS,U,oECDlDC,EAAcC,YAAiB,IAoBtBC,EAFaC,YAAU,CAACC,KAAK,wBAAhBD,EAhBL,SAACb,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAU,WACVT,KAAK,iBACLU,SAAU,CAACC,IAAUV,GACrBW,YAAY,yBAEvB,qBAAKpB,UAAS,UAAKqB,IAAL,YAAgBC,KAA9B,SACI,0DCqBDC,EA1BC,SAACxB,GAEb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMtB,QAAQyB,KAAI,SAAAC,GAAM,OAAI,cAAC,EAAD,CAAYpB,KAAMoB,EAAOpB,KAAsBD,GAAIqB,EAAOrB,IAAtBqB,EAAOrB,OACzFsB,EAAmBL,EAAMM,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAS5B,QAAS4B,EAAE5B,SAAc4B,EAAExB,OAC9DiB,EAAMQ,eAK3B,OAAKjC,EAAMkC,OAGP,sBAAKjC,UAAWC,IAAEC,QAAlB,UACI,qBAAKF,UAAWC,IAAEiC,aAAlB,SACKR,IAEL,sBAAK1B,UAAWC,IAAE6B,SAAlB,UACI,8BAAMD,IACN,cAAC,EAAD,CAAqBf,SAbb,SAACqB,GACjBpC,EAAMqC,YAAYD,EAAOH,yBAGH,cAAC,IAAD,CAAU1B,GAAI,Y,+CCnBxC+B,EAA6B,SAACb,GAAD,MAAY,CACzCS,OAAQT,EAAMc,KAAKL,S,QCiBRM,sBACXC,aAfkB,SAAChB,GACnB,MAAM,CACFC,YAAaD,EAAMC,gBAIF,SAACgB,GACtB,MAAM,CACFL,YAAa,SAACJ,GACVS,EAASC,YAAmBV,UDTR,SAACW,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAK9C,MAAMkC,OACT,cAACU,EAAD,eAAeE,KAAK9C,QADI,cAAC,IAAD,CAAUO,GAAI,eAJV,GAEXwC,aAShC,OAFiCN,YAAQH,EAARG,CAAqCI,KCK3DL,CAGbhB","file":"static/js/3.1630b0d7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_font\":\"Post_content_font__1Jfj6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content_font\":\"MyPosts_content_font__1DTPt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2_ltd\",\"dialogsItems\":\"Dialogs_dialogsItems__z8Ni9\",\"active\":\"Dialogs_active__v7WQY\",\"messages\":\"Dialogs_messages__2QRTg\",\"message\":\"Dialogs_message__3gFsO\"};","import s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n    <div className={s.dialogs}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;","import s from '../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialogs + ' ' + s.active}>\r\n            <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DialogItem;","import {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport profile from \"../Profile/MyPosts/MyPosts.module.css\";\r\nimport contentFont from \"../Profile/MyPosts/Post/Post.module.css\";\r\n\r\nconst maxLength50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component=\"textarea\"\r\n                       name=\"newMessageBody\"\r\n                       validate={[required, maxLength50]}\r\n                       placeholder='Enter your message'/>\r\n            </div>\r\n            <div className={`${profile} ${contentFont}`}>\r\n                <button>Send Message</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default AddMessageFormRedux","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport profile from \"../Profile/MyPosts/MyPosts.module.css\";\r\nimport contentFont from \"../Profile/MyPosts/Post/Post.module.css\";\r\nimport {Redirect} from \"react-router\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport AddMessageFormRedux from \"./AddMessageForm\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} key={dialog.id} id={dialog.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody)\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={'/login'}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dialogs;","import * as React from \"react\";\r\nimport {Redirect} from \"react-router\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render () {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props} />;\r\n        }\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToPropsForRedirect) (RedirectComponent);\r\n\r\n    return ConnectedRedirectComponent;\r\n}","import React from 'react'\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return{\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);"],"sourceRoot":""}